* Git Sync Mode
Sync your work, automatically after save.

** Usage
*** Install
#+begin_src elisp
  (use-package git-sync-mode
    :vc (:url "https://github.com/justinbarclay/git-sync-mode"))
#+end_src
*** .dir-locals.el
=git-sync-mode= can run automatically using [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Directory-Variables.html][dir-locals]], this gives you the benefit of controlling what file types it will run on.
#+begin_src elisp
;;; Directory Local Variables            -*- no-byte-compile: t -*-
;;; For more information see (info "(emacs) Directory Variables")

((prog-mode . ((mode . git-sync)))
 (org-mode . ((mode . git-sync))))
#+end_src
*** Global mode
You can also use =git-sync-allow-list= to tell =git-sync-global-mode= which projects/directories git-sync should work in.
#+begin_src elisp
  (use-package git-sync-mode
    :vc (:url "https://github.com/justinbarclay/git-sync-mode")
    :config
    (git-sync-global-mode)
    (add-to-list git-sync-allow-list '("/path/to/project")))
#+end_src
*** Customization
- =git-sync-generate-message=: The function called to generate the commit message. This function takes no argument but is run within the context of the current buffer.

#+begin_src elisp
  (defun my/commit-message ()
    (format "changes from %s on %s" (system-name) (current-time-string)))

  (setq git-sync-generate-message #'my/commit-message)
#+end_src

- =git-sync-allow-list=: List of directories that =git-sync-mode= can run in. If any the directory is a parent of the current file git-sync-mode will be enabled.

